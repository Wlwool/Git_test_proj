def find_smallest(arr):
    smallest = arr[0]  # для хранения наименьшего значения
    smallest_index = 0  # для хранения индекса наименьшего значения
    for i in range(1, len(arr)):
        if arr[i] < smallest:
            smallest = arr[i]
            smallest_index = i
    return smallest_index


def selection_sort(arr):  # сортируем массив
    new_array = []
    for i in range(len(arr)):
        smallest = find_smallest(arr)  # находим наименьший элемент в массиве
        new_array.append(arr.pop(smallest))  # добавляем его в новый массив
    return new_array


print(selection_sort([5, 3, 6, 2, 10]))

"""
- Память компьютера напоминает огромный шкаф с ящиками.
- Если вам потребуется сохранить набор элементов, воспользуйтесь массивом или списком.
- В массиве все элементы хранятся в памяти рядом друг с другом.
- В связанном списке элементы распределяются в произвольных местах памяти, при этом в каждом элементе хранится
  адрес следующего элемента.
- Массивы обеспечивают быстрое чтение.
- Списки обеспечивают быструю вставку и удаление.
"""
